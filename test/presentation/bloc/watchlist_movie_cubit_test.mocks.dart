// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/bloc/watchlist_movie_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/movie.dart' as _i7;
import 'package:ditonton/domain/entities/tv_series.dart' as _i9;
import 'package:ditonton/domain/repositories/tv_series_repository.dart' as _i3;
import 'package:ditonton/domain/usecases/get_tv_series_watchlist.dart' as _i8;
import 'package:ditonton/domain/usecases/get_watchlist_movies.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTvSeriesRepository_1 extends _i1.Fake
    implements _i3.TvSeriesRepository {}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i4.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetTvSeriesWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvSeriesWatchlist extends _i1.Mock
    implements _i8.GetTvSeriesWatchlist {
  MockGetTvSeriesWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvSeriesRepository get tvSeriesRepository =>
      (super.noSuchMethod(Invocation.getter(#tvSeriesRepository),
          returnValue: _FakeTvSeriesRepository_1()) as _i3.TvSeriesRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TvSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i9.TvSeries>>>.value(
                      _FakeEither_0<_i6.Failure, List<_i9.TvSeries>>()))
          as _i5.Future<_i2.Either<_i6.Failure, List<_i9.TvSeries>>>);
}
